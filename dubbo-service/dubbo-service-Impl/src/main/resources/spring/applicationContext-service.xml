<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:property-placeholder location="classpath:conf/*.properties"/>

    <!--配置包扫描器-->
    <context:component-scan base-package="com.platform.pc.microservice.service,com.platform.pc.microservice.entity"/>

    <!-- task任务扫描注解 -->
    <!--<task:annotation-driven/>-->

    <!--异步与定时任务扫描注解-->
    <task:executor id="myexecutor" pool-size="100-10000" queue-capacity="10"/>
    <task:annotation-driven executor="myexecutor"/>

    <!-- 目的：找到注册中心，注册当前服务的基本信息 -->
    <!-- 使用dubbo发布服务 -->
    <!-- 1.配置别名， 目的是在后台可以看到这个服务的别名，好区分到底是谁 -->
    <dubbo:application name="${dubbo.application.name}">
        <dubbo:parameter key="qos.enable" value="${qos.enable}" />
        <dubbo:parameter key="qos.accept.foreign.ip" value="${qos.accept.foreign.ip}" />
        <dubbo:parameter key="qos.port" value="${qos.port}" />
    </dubbo:application>
    <!-- 2. 配置注册中心  address : 注册中心地址 protocol: 注册中心的协议格式 -->
    <dubbo:registry address="${dubbo.registry.address}" protocol="${dubbo.register.name}"/>
    <!-- 3. 选择需要暴露的方法 interface: 目标类的类型 ref: 目标类的具体实现 timeout: 超时连接时间-->
    <dubbo:service interface="com.platform.pc.microservice.service.ItemService" ref="itemServiceImpl" timeout="10000" />
    <dubbo:service interface="com.platform.pc.microservice.service.MemberService" ref="memberServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.ItemCatService" ref="itemCatServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.UserService" ref="userServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.OrderService" ref="orderServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.ThanksService" ref="thanksServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.SystemService" ref="systemServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.DictService" ref="dictServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.ExpressService" ref="expressServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.CountService" ref="countServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.PanelService" ref="panelServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.ContentService" ref="contentServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.SearchService" ref="searchServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.SearchItemService" ref="searchItemServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.LoginService" ref="loginServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.RegisterService" ref="registerServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.CartService" ref="cartServiceImpl" timeout="10000"/>
    <dubbo:service interface="com.platform.pc.microservice.service.AddressService" ref="addressServiceImpl" timeout="10000"/>
    <!-- 4、配置当前服务暴露的端口 以及暴露协议 -->
    <dubbo:protocol name="${dubbo.protocol.name}" port="${dubbo.protocol.port}" payload="2147483645"
                    buffer="2147483645"/>
</beans>
